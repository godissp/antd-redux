{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"domain": "medium.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4caa6j", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "rdv100", "media": null, "score": 15, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/YRvVbGWwhFUak1XPijrWhCNa_24olzzJNFh-VEP9nL0.jpg?s=68c4efcbbd14c7ebcb8c8e05d55e1b5d", "width": 800, "height": 285}, "resolutions": [{"url": "https://i.redditmedia.com/YRvVbGWwhFUak1XPijrWhCNa_24olzzJNFh-VEP9nL0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=33534fe3364b88cc3f84eff8fa2c0b27", "width": 108, "height": 38}, {"url": "https://i.redditmedia.com/YRvVbGWwhFUak1XPijrWhCNa_24olzzJNFh-VEP9nL0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4ad1295e7128816416478eddaa754274", "width": 216, "height": 76}, {"url": "https://i.redditmedia.com/YRvVbGWwhFUak1XPijrWhCNa_24olzzJNFh-VEP9nL0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=20fe85ea281242a66b4a1cf3d58b16c3", "width": 320, "height": 114}, {"url": "https://i.redditmedia.com/YRvVbGWwhFUak1XPijrWhCNa_24olzzJNFh-VEP9nL0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=0fb8a9b9fbf42849beb43f764bf2202f", "width": 640, "height": 228}], "variants": {}, "id": "MHRIC8KMHcXXB5KXgKojuPVJ_fZ11miqToLnZSnswtA"}]}, "num_comments": 0, "thumbnail": "http://b.thumbs.redditmedia.com/WmAr99xSdVv54LOIxkAoxQNv-ggLiawifWjwRzSvAcs.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4caa6j/how_draftjs_represents_rich_text_data/", "locked": false, "name": "t3_4caa6j", "created": 1459202995.0, "url": "https://medium.com/@rajaraodv/how-draft-js-represents-rich-text-data-eeabb5f25cf2#.jnp0msvro", "author_flair_text": null, "quarantine": false, "title": "How Draft.js Represents Rich Text Data", "created_utc": 1459174195.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 15}}, {"kind": "t3", "data": {"domain": "benchling.engineering", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4caelr", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "cynicalreason", "media": null, "score": 13, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/n_ZmQ-ydEiGZmvUD3Dy8VybwT8EVvwc4LAgXuR94cAA.jpg?s=dfe42980fe769af318c6109038b90915", "width": 1264, "height": 1198}, "resolutions": [{"url": "https://i.redditmedia.com/n_ZmQ-ydEiGZmvUD3Dy8VybwT8EVvwc4LAgXuR94cAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=c67693d90a9715a41a39c331f83dc766", "width": 108, "height": 102}, {"url": "https://i.redditmedia.com/n_ZmQ-ydEiGZmvUD3Dy8VybwT8EVvwc4LAgXuR94cAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=0e79230610aeab147e61a6a0cfe22bc5", "width": 216, "height": 204}, {"url": "https://i.redditmedia.com/n_ZmQ-ydEiGZmvUD3Dy8VybwT8EVvwc4LAgXuR94cAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=ab4668112c277c217b3c3b9fa61796f3", "width": 320, "height": 303}, {"url": "https://i.redditmedia.com/n_ZmQ-ydEiGZmvUD3Dy8VybwT8EVvwc4LAgXuR94cAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=a5edb24f337700ff8718b2ae4543a577", "width": 640, "height": 606}, {"url": "https://i.redditmedia.com/n_ZmQ-ydEiGZmvUD3Dy8VybwT8EVvwc4LAgXuR94cAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=ba44685bb71c4eea22c8766d2b2503c4", "width": 960, "height": 909}, {"url": "https://i.redditmedia.com/n_ZmQ-ydEiGZmvUD3Dy8VybwT8EVvwc4LAgXuR94cAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=054bb69a3b50592be3df0aa6b14c7516", "width": 1080, "height": 1023}], "variants": {}, "id": "BMFHU5kZ1uV2U19scBWnep-1GnZpq36O0NBdXjFh2nU"}]}, "num_comments": 1, "thumbnail": "http://b.thumbs.redditmedia.com/V7ndnPD5XP9_6ECGB3_h3B8rQGLsUdluxmdUROaPdEA.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4caelr/a_deep_dive_into_react_perf_debugging/", "locked": false, "name": "t3_4caelr", "created": 1459204793.0, "url": "http://benchling.engineering/deep-dive-react-perf-debugging/", "author_flair_text": null, "quarantine": false, "title": "A Deep Dive into React Perf Debugging", "created_utc": 1459175993.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 13}}, {"kind": "t3", "data": {"domain": "blog.daiwei.lu", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4cac8t", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "d6ud6u", "media": null, "score": 11, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "default", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4cac8t/what_i_learned_from_redux/", "locked": false, "name": "t3_4cac8t", "created": 1459203808.0, "url": "http://blog.daiwei.lu/what-i-learned-from-redux-the-redux-pattern/", "author_flair_text": null, "quarantine": false, "title": "What I learned from Redux", "created_utc": 1459175008.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 11}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4cb2oq", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "jamesishere", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/vif8p-YhNSs6yxlWFT-4lHNDxTz20qS--FGeST_PqqE.jpg?s=8cdfb37d594cc33113164ee6c2db95e8", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/vif8p-YhNSs6yxlWFT-4lHNDxTz20qS--FGeST_PqqE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=b4eb6b12198b58a046df7aa882da7ff3", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/vif8p-YhNSs6yxlWFT-4lHNDxTz20qS--FGeST_PqqE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=d47495bda59093559bb6cec6c82b8e51", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/vif8p-YhNSs6yxlWFT-4lHNDxTz20qS--FGeST_PqqE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=425ba646d5fdbe6a2c7a4187e1f1a73e", "width": 320, "height": 320}], "variants": {}, "id": "xvpLwar6IEnFDMkI_3sJ73qfZr6tRtS8sftizqMtcYk"}]}, "num_comments": 0, "thumbnail": "http://b.thumbs.redditmedia.com/JPgUbU1WU2AbhKHiYQkOQA2U4x3-f2JZD83lPurc-PQ.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4cb2oq/react_simple_markdown_editor_component/", "locked": false, "name": "t3_4cb2oq", "created": 1459213862.0, "url": "https://github.com/seibelj/react-simple-markdown-editor", "author_flair_text": null, "quarantine": false, "title": "React Simple Markdown Editor component", "created_utc": 1459185062.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"domain": "jsfiddle.net", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4ccmgi", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "ndboost", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "default", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4ccmgi/react_return_multiple_dom_nodes_for_table/", "locked": false, "name": "t3_4ccmgi", "created": 1459233999.0, "url": "http://jsfiddle.net/qqqdu402/", "author_flair_text": null, "quarantine": false, "title": "React return multiple DOM nodes for table structure help, free reddit gold to help me out here.", "created_utc": 1459205199.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys! &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m developing SPA with react-redux. I want to make several pages: list of items(/items), edit item(/items/:itemId/edit), show item(/items/:itemId). Items are requested from API, so actions will be async. &lt;/p&gt;\n\n&lt;p&gt;How do you implement CRUD?  How will store&amp;#39;s state look like? What actions will be created? How will reducers be structured?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey guys! \n\nI'm developing SPA with react-redux. I want to make several pages: list of items(/items), edit item(/items/:itemId/edit), show item(/items/:itemId). Items are requested from API, so actions will be async. \n\nHow do you implement CRUD?  How will store's state look like? What actions will be created? How will reducers be structured?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c9tap", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "yoihito", "media": null, "score": 15, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 12, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4c9tap/what_is_redux_best_practices_to_implement_crud/", "locked": false, "name": "t3_4c9tap", "created": 1459194472.0, "url": "https://www.reddit.com/r/reactjs/comments/4c9tap/what_is_redux_best_practices_to_implement_crud/", "author_flair_text": null, "quarantine": false, "title": "What is Redux best practices to implement CRUD?", "created_utc": 1459165672.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 15}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is one of those: &amp;quot;I&amp;#39;ve found &lt;em&gt;a&lt;/em&gt; solution, but it might not be the best solution problems.&amp;quot; &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m refactoring an application into the Redux framework, mostly because it allows us to very easily log application actions and state with redux middleware. Eventually this can be saved to a database and we can QA-test with automated testing over weekends, looking for those edge cases and non-reproducable errors.  &lt;/p&gt;\n\n&lt;p&gt;Because I&amp;#39;m using redux-logger, I&amp;#39;m able to essentially replace console.log with this: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;superLogger = {\n  record: []\n  log: function(msg){\n    console.log(msg);\n    this.record.push(msg); \n  }, \n  error: function(msg){\n    console.error(msg);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here&amp;#39;s the problem.  This superLogger lives in ./store/configureStore.js - where the store is configured.  I &lt;em&gt;don&amp;#39;t&lt;/em&gt; want to make it so I put the log inside the state, because to do so would dispatch an action, which would change the log, which would dispatch and action, and infinite loop city. &lt;/p&gt;\n\n&lt;p&gt;What I&amp;#39;d eventually like to do is have a listener for a keypress, and on that keypress, write out the contents of superLogger.record to an element that appears on the page. But I can&amp;#39;t seem to figure out how to do that without direct DOM manipulation.  &lt;/p&gt;\n\n&lt;p&gt;I could try exporting superLogger, but I believe that that simply creates a new instance of superLogger - so whatever I export will have a blank log.  &lt;/p&gt;\n\n&lt;p&gt;Again, I &lt;em&gt;can&lt;/em&gt; solve this problem using something like document.getElementById(&amp;#39;logthing&amp;#39;).value = JSON.stringify(superLogger.record) but that&amp;#39;s not very &amp;quot;reacty.&amp;quot; &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "This is one of those: \"I've found *a* solution, but it might not be the best solution problems.\" \n\nI'm refactoring an application into the Redux framework, mostly because it allows us to very easily log application actions and state with redux middleware. Eventually this can be saved to a database and we can QA-test with automated testing over weekends, looking for those edge cases and non-reproducable errors.  \n\nBecause I'm using redux-logger, I'm able to essentially replace console.log with this: \n\n    superLogger = {\n      record: []\n      log: function(msg){\n        console.log(msg);\n        this.record.push(msg); \n      }, \n      error: function(msg){\n        console.error(msg);\n      }\n    }\n\nHere's the problem.  This superLogger lives in ./store/configureStore.js - where the store is configured.  I *don't* want to make it so I put the log inside the state, because to do so would dispatch an action, which would change the log, which would dispatch and action, and infinite loop city. \n\nWhat I'd eventually like to do is have a listener for a keypress, and on that keypress, write out the contents of superLogger.record to an element that appears on the page. But I can't seem to figure out how to do that without direct DOM manipulation.  \n\nI could try exporting superLogger, but I believe that that simply creates a new instance of superLogger - so whatever I export will have a blank log.  \n\nAgain, I *can* solve this problem using something like document.getElementById('logthing').value = JSON.stringify(superLogger.record) but that's not very \"reacty.\" ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4cd4jc", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "BrianBoyko", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4cd4jc/whats_the_best_way_to_output_reduxlogger_to_an/", "locked": false, "name": "t3_4cd4jc", "created": 1459241400.0, "url": "https://www.reddit.com/r/reactjs/comments/4cd4jc/whats_the_best_way_to_output_reduxlogger_to_an/", "author_flair_text": null, "quarantine": false, "title": "What's the best way to output Redux-Logger to an element?", "created_utc": 1459212600.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4cd141", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "mkmoshe", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/21HT9DPRYV-KC1IdNuUgfrjTaE8IXYJXfVIecvRhoOI.jpg?s=fd55867fa341b0775b801ddb43c95583", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/21HT9DPRYV-KC1IdNuUgfrjTaE8IXYJXfVIecvRhoOI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=d38c8f806bf4c68b2f305b3706aeeb52", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/21HT9DPRYV-KC1IdNuUgfrjTaE8IXYJXfVIecvRhoOI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4ed7162fb28eaa9e2985307f05a444bb", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/21HT9DPRYV-KC1IdNuUgfrjTaE8IXYJXfVIecvRhoOI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=8ed41ba36816fb9b29896c4e71b475dc", "width": 320, "height": 320}], "variants": {}, "id": "Shh15UZrt6Qye0trCTr6FX9tzw6VGY-Hx_ggeXy2Ek4"}]}, "num_comments": 0, "thumbnail": "http://b.thumbs.redditmedia.com/la3UMtVGpBpwZ9pxcBPiY50MUKpy9DAMa7FW83ik8gg.jpg", "subreddit_id": "t5_2zldd", "hide_score": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4cd141/react_basic_theoretical_concepts/", "locked": false, "name": "t3_4cd141", "created": 1459239978.0, "url": "https://github.com/reactjs/react-basic", "author_flair_text": null, "quarantine": false, "title": "React - Basic Theoretical Concepts", "created_utc": 1459211178.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I\u2019ve been building websites for years now, but I still struggle with the concept of building websites using components. I understand the difference between presentational components and smart components, but find it hard to find the split?\nDoes anybody have any good material to read to help me understand how to build applications from a components based architecture?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi,\n\nI\u2019ve been building websites for years now, but I still struggle with the concept of building websites using components. I understand the difference between presentational components and smart components, but find it hard to find the split?\nDoes anybody have any good material to read to help me understand how to build applications from a components based architecture?\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4cadhx", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "boyney123", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4cadhx/need_learning_material_for_building_component/", "locked": false, "name": "t3_4cadhx", "created": 1459204334.0, "url": "https://www.reddit.com/r/reactjs/comments/4cadhx/need_learning_material_for_building_component/", "author_flair_text": null, "quarantine": false, "title": "Need learning material for building component based apps.", "created_utc": 1459175534.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Following up on my question &lt;a href=\"https://www.reddit.com/r/reactjs/comments/4bge2y/need_guidance_on_my_reactjs_progress_still_noob/\"&gt;here&lt;/a&gt;. I have read and watched a lot of tutorials and examples lately (and have learned a lot especially in javascript) and I think I&amp;#39;m not using redux as it was intended. It seems redux (or particularly the reducers and stores) is intended to contain the state of the app (and not particularly the data (that I&amp;#39;d get from the API)) and reducers would change the state depending on what&amp;#39;s happening or going to happen to the app.&lt;/p&gt;\n\n&lt;p&gt;If so, then I really don&amp;#39;t need redux if I&amp;#39;m getting all my data per page from an API endpoint and are already fixed in the format I need to display my page. Did I get that right? If I did, are there any examples that builds a universal app without redux (or the likes). What do I need to add in my react app? I haven&amp;#39;t seen any examples like that. I know there&amp;#39;s a lot of talk whether you really need universal or not but I do need it because of the reason of SEO. What I need is that the page would display (or wait)  the data from the API endpoint and still display it even if JS is not loaded. Or would I still eventually need it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Following up on my question [here](https://www.reddit.com/r/reactjs/comments/4bge2y/need_guidance_on_my_reactjs_progress_still_noob/). I have read and watched a lot of tutorials and examples lately (and have learned a lot especially in javascript) and I think I'm not using redux as it was intended. It seems redux (or particularly the reducers and stores) is intended to contain the state of the app (and not particularly the data (that I'd get from the API)) and reducers would change the state depending on what's happening or going to happen to the app.\n\nIf so, then I really don't need redux if I'm getting all my data per page from an API endpoint and are already fixed in the format I need to display my page. Did I get that right? If I did, are there any examples that builds a universal app without redux (or the likes). What do I need to add in my react app? I haven't seen any examples like that. I know there's a lot of talk whether you really need universal or not but I do need it because of the reason of SEO. What I need is that the page would display (or wait)  the data from the API endpoint and still display it even if JS is not loaded. Or would I still eventually need it?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4cachy", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "dit-index", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4cachy/universal_app_with_data_from_api/", "locked": false, "name": "t3_4cachy", "created": 1459203918.0, "url": "https://www.reddit.com/r/reactjs/comments/4cachy/universal_app_with_data_from_api/", "author_flair_text": null, "quarantine": false, "title": "Universal app with data from API", "created_utc": 1459175118.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "medium.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4cag3u", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "joshwcomeau", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/OYetoIJ_Y5GhRrHXYZnXtBbSVPsxsiCjs4IS5U-Gq8g.jpg?s=2a6ed66d1d16279da813c8e7a5f9cd0d", "width": 800, "height": 259}, "resolutions": [{"url": "https://i.redditmedia.com/OYetoIJ_Y5GhRrHXYZnXtBbSVPsxsiCjs4IS5U-Gq8g.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=7accbf39c24e20884343eed01a7539c8", "width": 108, "height": 34}, {"url": "https://i.redditmedia.com/OYetoIJ_Y5GhRrHXYZnXtBbSVPsxsiCjs4IS5U-Gq8g.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=682874718f10447b076cd1f0c8a7c465", "width": 216, "height": 69}, {"url": "https://i.redditmedia.com/OYetoIJ_Y5GhRrHXYZnXtBbSVPsxsiCjs4IS5U-Gq8g.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=8b8a1e6e6d2d5538a7bea529197b1e9c", "width": 320, "height": 103}, {"url": "https://i.redditmedia.com/OYetoIJ_Y5GhRrHXYZnXtBbSVPsxsiCjs4IS5U-Gq8g.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=8f9a0b5199b0d7e9447961a113f9b299", "width": 640, "height": 207}], "variants": {}, "id": "_1VNKkbXfYwq2HG0ab02a1BeD89RhV7W9ZmA8RUUZos"}]}, "num_comments": 0, "thumbnail": "http://a.thumbs.redditmedia.com/-sAWknR_poXE-kzZg-F240sRCjR0bjcoQ6FtWpU9yO8.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4cag3u/satisfy_your_peers_making_your_react_modules_play/", "locked": false, "name": "t3_4cag3u", "created": 1459205435.0, "url": "https://medium.com/@joshuawcomeau/satisfy-your-peers-bca7d0451589#.65keivrgb", "author_flair_text": null, "quarantine": false, "title": "Satisfy your Peers - Making your React modules play nice with React 15", "created_utc": 1459176635.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I know immutablejs is not react, but they are used together a lot, so I thought I&amp;#39;d ask it here.&lt;/p&gt;\n\n&lt;p&gt;What&amp;#39;s the right way to work with data inside immutable? Should I toJS(), work on it and then put it back in there using set()?&lt;/p&gt;\n\n&lt;p&gt;Or use functions like filter?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I know immutablejs is not react, but they are used together a lot, so I thought I'd ask it here.\n\nWhat's the right way to work with data inside immutable? Should I toJS(), work on it and then put it back in there using set()?\n\nOr use functions like filter?\n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4camm7", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "siamthailand", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4camm7/how_are_you_supposed_to_work_on_data_inside/", "locked": false, "name": "t3_4camm7", "created": 1459207947.0, "url": "https://www.reddit.com/r/reactjs/comments/4camm7/how_are_you_supposed_to_work_on_data_inside/", "author_flair_text": null, "quarantine": false, "title": "How are you supposed to work on data inside immutable?", "created_utc": 1459179147.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019m interested in using React for an idea I have. But would like to know how you would build it.&lt;/p&gt;\n\n&lt;p&gt;The idea:&lt;/p&gt;\n\n&lt;p&gt;SPA that asks multiple questions on different pages and shows a list of answers at the end depending on the questions you answered. (5 pages of questions, 1 page at the end showing answers and info graphics).&lt;/p&gt;\n\n&lt;p&gt;Multiple pages (so was thinking of using react-router) and the state has to be stored across the pages so the final page can work out what to show (was thinking redux).&lt;/p&gt;\n\n&lt;p&gt;Just want to know what you would use and why? Wanted to see if my thought process is in the right direction.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I\u2019m interested in using React for an idea I have. But would like to know how you would build it.\n\nThe idea:\n\nSPA that asks multiple questions on different pages and shows a list of answers at the end depending on the questions you answered. (5 pages of questions, 1 page at the end showing answers and info graphics).\n\n\nMultiple pages (so was thinking of using react-router) and the state has to be stored across the pages so the final page can work out what to show (was thinking redux).\n\nJust want to know what you would use and why? Wanted to see if my thought process is in the right direction.\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4cabt2", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "boyney123", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4cabt2/simple_project_looking_for_some_validation_in_my/", "locked": false, "name": "t3_4cabt2", "created": 1459203644.0, "url": "https://www.reddit.com/r/reactjs/comments/4cabt2/simple_project_looking_for_some_validation_in_my/", "author_flair_text": null, "quarantine": false, "title": "Simple project - Looking for some validation in my thought process please", "created_utc": 1459174844.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi guys,&lt;/p&gt;\n\n&lt;p&gt;Question, my store contains an array with ACL permissions to check whether or not a user can visit a specific page (or view a button, or specific text etc). &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve created a container (AclContainer, connected to my store) which can be used as following: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;AclContainer can={&amp;#39;projects.list&amp;#39;}&amp;gt;\n    &amp;lt;h1&amp;gt;Hi&amp;lt;/h1&amp;gt;\n&amp;lt;/AclContainer&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If the user does not have the permission, then a forbidden page is rendered. Another example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;AclContainer role={&amp;#39;admin&amp;#39;} can={&amp;#39;projects.edit&amp;#39;}&amp;gt;\n    &amp;lt;Link to=&amp;quot;/projects/edit&amp;quot;&amp;gt;Edit&amp;lt;/Link&amp;gt;\n&amp;lt;/AclContainer&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The idea is that this component will be (re)-used alot, for example create a &amp;lt;ProjectEditButton&amp;gt;-component which utilises the code above. So for kind of check an &amp;lt;AclContainer&amp;gt; component is created and connected to the store. Is this a bad practice?&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t really see another way around this (except for passing down a &amp;#39;permissions&amp;#39; array all the way down, or use context)&lt;/p&gt;\n\n&lt;p&gt;Thank you guys!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi guys,\n\nQuestion, my store contains an array with ACL permissions to check whether or not a user can visit a specific page (or view a button, or specific text etc). \n\nI've created a container (AclContainer, connected to my store) which can be used as following: \n\n    &lt;AclContainer can={'projects.list'}&gt;\n        &lt;h1&gt;Hi&lt;/h1&gt;\n    &lt;/AclContainer&gt;\n\nIf the user does not have the permission, then a forbidden page is rendered. Another example:\n\n    &lt;AclContainer role={'admin'} can={'projects.edit'}&gt;\n        &lt;Link to=\"/projects/edit\"&gt;Edit&lt;/Link&gt;\n    &lt;/AclContainer&gt;\n\nThe idea is that this component will be (re)-used alot, for example create a &lt;ProjectEditButton&gt;-component which utilises the code above. So for kind of check an &lt;AclContainer&gt; component is created and connected to the store. Is this a bad practice?\n\nI don't really see another way around this (except for passing down a 'permissions' array all the way down, or use context)\n\nThank you guys!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4ca8ne", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "robbinjanssen", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4ca8ne/question_frequently_used_containers_connected/", "locked": false, "name": "t3_4ca8ne", "created": 1459202365.0, "url": "https://www.reddit.com/r/reactjs/comments/4ca8ne/question_frequently_used_containers_connected/", "author_flair_text": null, "quarantine": false, "title": "[Question] Frequently used containers connected with redux", "created_utc": 1459173565.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"domain": "slides.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c9ig9", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "koistya", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/cR1q7JvjCfFVW_qZgN2k25xSA6owTuUyFBDQpPG1AKg.jpg?s=808b0708c1b5a317bf17f8f61907b326", "width": 500, "height": 500}, "resolutions": [{"url": "https://i.redditmedia.com/cR1q7JvjCfFVW_qZgN2k25xSA6owTuUyFBDQpPG1AKg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=a567df871df91a927934aa6bd59eaa52", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/cR1q7JvjCfFVW_qZgN2k25xSA6owTuUyFBDQpPG1AKg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=bb7a66912eb2c9e6c9e3bace33555921", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/cR1q7JvjCfFVW_qZgN2k25xSA6owTuUyFBDQpPG1AKg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=daf7e256604ee789b6c322f1eca36d5a", "width": 320, "height": 320}], "variants": {}, "id": "A1H4aRXb7IXDgKmEaYZbiQDueiSMszWe19Wio7WoOSk"}]}, "num_comments": 1, "thumbnail": "http://b.thumbs.redditmedia.com/a1YAylMFldz-JH79ZgzoA-4doURqqVMqa4LPJD257us.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4c9ig9/middlewarestyle_routing_example_with_react_relay/", "locked": false, "name": "t3_4c9ig9", "created": 1459186865.0, "url": "http://slides.com/koistya/universal-router", "author_flair_text": null, "quarantine": false, "title": "Middleware-style routing example with React / Relay / code splitting", "created_utc": 1459158065.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been using &lt;code&gt;react-native&lt;/code&gt; to build a cross platform application which also has a corresponding react web-app. I&amp;#39;m finding that a lot of the reducers, action creators, and business logic overlaps and it would hint at the possibility of unifying the three within one consolidated code base, possibly using a convention similar to what react-native uses (index.ios.js/index.android.js).&lt;/p&gt;\n\n&lt;p&gt;Does anyone have any experience with this? Any insight/examples?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've been using `react-native` to build a cross platform application which also has a corresponding react web-app. I'm finding that a lot of the reducers, action creators, and business logic overlaps and it would hint at the possibility of unifying the three within one consolidated code base, possibly using a convention similar to what react-native uses (index.ios.js/index.android.js).\n\nDoes anyone have any experience with this? Any insight/examples?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c7eca", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "btdiehr", "media": null, "score": 16, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 4, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4c7eca/reactnative_x_webapp_has_anyone_done_this/", "locked": false, "name": "t3_4c7eca", "created": 1459144602.0, "url": "https://www.reddit.com/r/reactjs/comments/4c7eca/reactnative_x_webapp_has_anyone_done_this/", "author_flair_text": null, "quarantine": false, "title": "React-Native x WebApp: Has anyone done this?", "created_utc": 1459115802.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 16}}, {"kind": "t3", "data": {"domain": "blog.cupofcode.be", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c9ycy", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "dinodinodinosaur", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "default", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4c9ycy/going_global_with_react/", "locked": false, "name": "t3_4c9ycy", "created": 1459197388.0, "url": "http://blog.cupofcode.be/going-global-with-react/", "author_flair_text": null, "quarantine": false, "title": "Going global with React", "created_utc": 1459168588.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "searchkit.co", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c93ox", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "tsutomun", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "default", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4c93ox/ui_components_for_elasticsearch_searchkit/", "locked": false, "name": "t3_4c93ox", "created": 1459175103.0, "url": "http://searchkit.co/", "author_flair_text": null, "quarantine": false, "title": "UI components for Elasticsearch - Searchkit", "created_utc": 1459146303.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c6jl7", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "jineshshah36", "media": null, "score": 8, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/OxvIKtoEwSLp9_IC12lVtYfpNPt0NEk1WAOp2leaW14.jpg?s=e1fb144bbcda4efa440d33e839a0c88b", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/OxvIKtoEwSLp9_IC12lVtYfpNPt0NEk1WAOp2leaW14.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e8333114eddf5f781c0a71447482406e", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/OxvIKtoEwSLp9_IC12lVtYfpNPt0NEk1WAOp2leaW14.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=d722b4a869db9bb848ba2e892b177d77", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/OxvIKtoEwSLp9_IC12lVtYfpNPt0NEk1WAOp2leaW14.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=c12ec5ee29ab59d524fcc685b0aec555", "width": 320, "height": 320}], "variants": {}, "id": "Gzi-HjYVEve6TLAXSa-U_n-pRLW4muEph3_kTWFmGL8"}]}, "num_comments": 0, "thumbnail": "http://b.thumbs.redditmedia.com/I6KYvtL8_TADijGIG5pVVX9BnqwJa1YZzXrIvgHFqyE.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4c6jl7/i_built_a_navigation_bar_component_that_works/", "locked": false, "name": "t3_4c6jl7", "created": 1459131331.0, "url": "https://github.com/jineshshah36/react-native-nav", "author_flair_text": null, "quarantine": false, "title": "I built a navigation bar component that works with flux and redux for Android and iOS React Native apps. Lemme know what you think!", "created_utc": 1459102531.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 8}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What is the best way to test React components ?\nRight now I&amp;#39;m using &lt;a href=\"https://github.com/airbnb/enzyme\"&gt;https://github.com/airbnb/enzyme&lt;/a&gt; with Karma and mocha as test runner&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "What is the best way to test React components ?\nRight now I'm using https://github.com/airbnb/enzyme with Karma and mocha as test runner", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c5ffi", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "liri33", "media": null, "score": 21, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/ma9vzXI_UhCmejY0Sp6sk_K7VWgKIkqmBGcbC8jTS6U.jpg?s=a132223c728b93b5aa9a89d4116e720a", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/ma9vzXI_UhCmejY0Sp6sk_K7VWgKIkqmBGcbC8jTS6U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=14a590fb507fe9662d978ae4cf723f50", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/ma9vzXI_UhCmejY0Sp6sk_K7VWgKIkqmBGcbC8jTS6U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=a57625d7b6d4ba6817b01def2b631e5c", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/ma9vzXI_UhCmejY0Sp6sk_K7VWgKIkqmBGcbC8jTS6U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=1bc34c96be2db254a88e2e84af9aef0e", "width": 320, "height": 320}], "variants": {}, "id": "aey7wa4XcGkUQnmJnKrPRKw5YC_T6TgbVV5uZezG1Bw"}]}, "num_comments": 9, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "self", "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4c5ffi/best_way_to_test_react_components/", "locked": false, "name": "t3_4c5ffi", "created": 1459111482.0, "url": "https://www.reddit.com/r/reactjs/comments/4c5ffi/best_way_to_test_react_components/", "author_flair_text": null, "quarantine": false, "title": "Best way to test React components ?", "created_utc": 1459082682.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 21}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey, I&amp;#39;m very beginner with web-developing as I&amp;#39;ve experience of C#, Java etc.  other programming. Also I&amp;#39;ve made mobile programming with Android Studio. &lt;/p&gt;\n\n&lt;p&gt;My question is, can I make mobile app with React which works with every platform (so basically with Android and iOS)? I have to get data from multiple APIs and show it on the mobile app. Do I need something else than React to do that? How can I try my app  on my device, should I get it to some hosting service first like Azure or can I just transfer it to my mobile device like native Android App? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey, I'm very beginner with web-developing as I've experience of C#, Java etc.  other programming. Also I've made mobile programming with Android Studio. \n\nMy question is, can I make mobile app with React which works with every platform (so basically with Android and iOS)? I have to get data from multiple APIs and show it on the mobile app. Do I need something else than React to do that? How can I try my app  on my device, should I get it to some hosting service first like Azure or can I just transfer it to my mobile device like native Android App? ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c6tdk", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "rtuse", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4c6tdk/question_about_developing_mobile_app_with_react/", "locked": false, "name": "t3_4c6tdk", "created": 1459135473.0, "url": "https://www.reddit.com/r/reactjs/comments/4c6tdk/question_about_developing_mobile_app_with_react/", "author_flair_text": null, "quarantine": false, "title": "Question about developing mobile app with React", "created_utc": 1459106673.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "scotch.io", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c85lk", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "kapom", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/ju0fvihdCewefBghU4Ib5JQnqRcb8RYaxt2ojif-94Y.jpg?s=fef0a9908d00ce055bf23cfcd7bd8c40", "width": 1200, "height": 500}, "resolutions": [{"url": "https://i.redditmedia.com/ju0fvihdCewefBghU4Ib5JQnqRcb8RYaxt2ojif-94Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e2c88a1646f0b900f7650a306621ea1b", "width": 108, "height": 45}, {"url": "https://i.redditmedia.com/ju0fvihdCewefBghU4Ib5JQnqRcb8RYaxt2ojif-94Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=10f15c3e111465c10cf4e50ea5bed9df", "width": 216, "height": 90}, {"url": "https://i.redditmedia.com/ju0fvihdCewefBghU4Ib5JQnqRcb8RYaxt2ojif-94Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=b99dc9d1727d4244f544972c3e353923", "width": 320, "height": 133}, {"url": "https://i.redditmedia.com/ju0fvihdCewefBghU4Ib5JQnqRcb8RYaxt2ojif-94Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=ba51efa99242425403a9c31c35416e4b", "width": 640, "height": 266}, {"url": "https://i.redditmedia.com/ju0fvihdCewefBghU4Ib5JQnqRcb8RYaxt2ojif-94Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=b8a64bad274b89c455a2e26f66c48367", "width": 960, "height": 400}, {"url": "https://i.redditmedia.com/ju0fvihdCewefBghU4Ib5JQnqRcb8RYaxt2ojif-94Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=811102dc5b65b307bdf8285a878a6762", "width": 1080, "height": 450}], "variants": {}, "id": "zYvaPp-3sOt1pH8z9158NXqesCJ50hnwLZGRMBGfkP4"}]}, "num_comments": 0, "thumbnail": "http://b.thumbs.redditmedia.com/2-0wRMBAPFENQJnqYGVsbuHX-Rb29tXG0SLtE-I3JCE.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4c85lk/getting_to_know_flux_the_reactjs_architecture/", "locked": false, "name": "t3_4c85lk", "created": 1459156847.0, "url": "https://scotch.io/tutorials/getting-to-know-flux-the-react-js-architecture", "author_flair_text": null, "quarantine": false, "title": "Getting To Know Flux, the React.js Architecture", "created_utc": 1459128047.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Apologies for a really simple question, but I can&amp;#39;t figure this out. Currently I inject data in my containers mostly via &lt;code&gt;componentDidMount()&lt;/code&gt; hook, i.e. I connect container with actions and then in CDM hook I request store update like &lt;code&gt;this.props.actions.getData()&lt;/code&gt; and only then the store gets hydrated, data gets passed to the container and things start to work. But that feels really wrong (also container re-renders twice for every load) and it doesn&amp;#39;t work at all in some cases.\nShould I try and do this on a Router level instead, utilizing &lt;code&gt;onEnter&lt;/code&gt; hooks? Or is there an another, proper way that I&amp;#39;m not aware of?\nThere are approximately several bajillions of examples and various starter kits with different approaches but unfortunately very handful of those use real data flow.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Apologies for a really simple question, but I can't figure this out. Currently I inject data in my containers mostly via `componentDidMount()` hook, i.e. I connect container with actions and then in CDM hook I request store update like `this.props.actions.getData()` and only then the store gets hydrated, data gets passed to the container and things start to work. But that feels really wrong (also container re-renders twice for every load) and it doesn't work at all in some cases.\nShould I try and do this on a Router level instead, utilizing `onEnter` hooks? Or is there an another, proper way that I'm not aware of?\nThere are approximately several bajillions of examples and various starter kits with different approaches but unfortunately very handful of those use real data flow.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c3h6l", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "nationalfeiertag", "media": null, "score": 14, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 5, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4c3h6l/what_is_the_best_stage_to_inject_data_in/", "locked": false, "name": "t3_4c3h6l", "created": 1459064883.0, "url": "https://www.reddit.com/r/reactjs/comments/4c3h6l/what_is_the_best_stage_to_inject_data_in/", "author_flair_text": null, "quarantine": false, "title": "What is the best stage to inject data in React\\Redux App?", "created_utc": 1459036083.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 14}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;GitHub hardly has 2 examples with very outdated code. Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "GitHub hardly has 2 examples with very outdated code. Thanks!\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c2kck", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "bogas04", "media": null, "score": 7, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 14, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4c2kck/any_good_jwt_example_code/", "locked": false, "name": "t3_4c2kck", "created": 1459050235.0, "url": "https://www.reddit.com/r/reactjs/comments/4c2kck/any_good_jwt_example_code/", "author_flair_text": null, "quarantine": false, "title": "Any good jwt example code?", "created_utc": 1459021435.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;When I click a button to submit a form, I&amp;#39;d like to send all the form field values to the submit handler on the form or button. Is there a simple way to do this? The way I&amp;#39;ve been doing it so far when using plain react is like in &lt;a href=\"https://facebook.github.io/react/docs/tutorial.html#controlled-components\"&gt;https://facebook.github.io/react/docs/tutorial.html#controlled-components&lt;/a&gt;, where every change does a setState.&lt;/p&gt;\n\n&lt;p&gt;And when using Redux, every change triggers an action which updates the state from the reducers. It&amp;#39;s very cumbersome and tedious, and makes it slow and error-prone to make changes to the code.&lt;/p&gt;\n\n&lt;p&gt;Is this really how people are doing it, or is there a simpler way? Like in the submit handler is there an object implicitly passed to it containing all the form field values?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve seen Redux Form project and will use it if necessary but it seems like another big learning curve and I&amp;#39;m already having a lot of trouble wrapping my head around React and Redux at the moment.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "When I click a button to submit a form, I'd like to send all the form field values to the submit handler on the form or button. Is there a simple way to do this? The way I've been doing it so far when using plain react is like in https://facebook.github.io/react/docs/tutorial.html#controlled-components, where every change does a setState.\n\nAnd when using Redux, every change triggers an action which updates the state from the reducers. It's very cumbersome and tedious, and makes it slow and error-prone to make changes to the code.\n\nIs this really how people are doing it, or is there a simpler way? Like in the submit handler is there an object implicitly passed to it containing all the form field values?\n\nI've seen Redux Form project and will use it if necessary but it seems like another big learning curve and I'm already having a lot of trouble wrapping my head around React and Redux at the moment.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4c1xwi", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "nowboarding", "media": null, "score": 9, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/-CfDEf2LPRvQz8WpCmiDNh9pIphAwmgmvYl6q_tXI0c.jpg?s=79001baa363348139b8014e87835411c", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/-CfDEf2LPRvQz8WpCmiDNh9pIphAwmgmvYl6q_tXI0c.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=a29921fcad4a0acd4a09628232957d6b", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/-CfDEf2LPRvQz8WpCmiDNh9pIphAwmgmvYl6q_tXI0c.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=e2d015629c7402c3b0a33e86ffb49d37", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/-CfDEf2LPRvQz8WpCmiDNh9pIphAwmgmvYl6q_tXI0c.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=7e4f73c6faac946709e12fc30e99566f", "width": 320, "height": 320}], "variants": {}, "id": "6XM_Xwa3hfjHWMPZZegSsXALBMAX1aE6stuwn7eA_bQ"}]}, "num_comments": 7, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "self", "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4c1xwi/is_an_onchange_handler_needed_for_every_form/", "locked": false, "name": "t3_4c1xwi", "created": 1459040766.0, "url": "https://www.reddit.com/r/reactjs/comments/4c1xwi/is_an_onchange_handler_needed_for_every_form/", "author_flair_text": null, "quarantine": false, "title": "Is an onChange handler needed for every form field? Any less repetitive way to do it?", "created_utc": 1459011966.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 9}}], "after": "t3_4c1xwi", "before": null}}